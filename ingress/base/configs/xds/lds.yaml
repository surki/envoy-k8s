version_info: "0"
resources:
- "@type": type.googleapis.com/envoy.config.listener.v3.Listener
  name: ingress_tcp
  address:
    socket_address:
      protocol: TCP
      address: 0.0.0.0
      port_value: 443
  per_connection_buffer_limit_bytes: 16348
  drain_type: DEFAULT
  listener_filters:
  - name: "envoy.filters.listener.tls_inspector"
    typed_config:
      "@type": type.googleapis.com/envoy.extensions.filters.listener.tls_inspector.v3.TlsInspector
  # # Uncomment if Envoy is behind a load balancer that exposes client IP address using the PROXY protocol.
  # - name: envoy.filters.listener.proxy_protocol
  #   typed_config:
  #     "@type": type.googleapis.com/envoy.extensions.filters.listener.proxy_protocol.v3.ProxyProtocol
  traffic_direction: INBOUND
  enable_reuse_port: true
  socket_options:
  - description: "setsockopt(x, SOL_SOCKET, SO_KEEPALIVE, [1])"
    level: 1
    name: 9
    int_value: 1
    state: STATE_LISTENING
  - description: "setsockopt(x, SOL_TCP, TCP_KEEPIDLE, [300])"
    level: 6
    name: 4
    int_value: 300
    state: STATE_LISTENING
  - description: "setsockopt(fd, SOL_TCP, TCP_KEEPINTL, [5])"
    level: 6
    name: 5
    int_value: 5
    state: STATE_LISTENING
  - description: "setsockopt(fd, SOL_TCP, TCP_KEEPCNT, [5])"
    level: 6
    name: 6
    int_value: 5
    state: STATE_LISTENING
  #tcp_fast_open_queue_length:
  # connection_balance_config:
  #  exact_balance:
  filter_chains:
  - filters:
    - name: envoy.filters.network.sni_cluster
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.filters.network.sni_cluster.v3.SniCluster
    - name: envoy.filters.network.tcp_proxy
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy
        stat_prefix: tcp
        cluster: not-exists # We choose the upstream cluster based on SNI

    # - name: envoy.filters.network.http_connection_manager
    #   typed_config:
    #     "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
    #     stat_prefix: "ingress_http"
    #     codec_type: AUTO
    #     # local_reply_config:
    #     #   mappers:
    #     #   - filter:
    #     #       status_code_filter:
    #     #         comparison:
    #     #           op: EQ
    #     #           value:
    #     #             default_value:
    #     #             runtime_key: key_b
    #     #     body:
    #     #       filename: xxx
    #     #     body_format_override:
    #     #       text_format_source:
    #     #         inline_string: |
    #     #             %REQ(X-REQUEST-ID)%
    #     #       content_type: "text/plain"
    #     rds:
    #       route_config_name: route_8080
    #       config_source:
    #         resource_api_version: V3
    #         path_config_source:
    #           path: "/etc/envoy/xds/rds.yaml"
    #           watched_directory:
    #             path: "/etc/envoy/xds"
    #     http_filters:
    #     - name: envoy.filters.http.health_check
    #       typed_config:
    #         "@type": type.googleapis.com/envoy.extensions.filters.http.health_check.v3.HealthCheck
    #         pass_through_mode: false
    #         headers:
    #         - name: ":path"
    #           string_match:
    #             exact: "/healthz"
    #         # cluster_min_healthy_percentages:
    #     # - name: envoy.filters.http.header_to_metadata
    #     #   typed_config:
    #     #     "@type": type.googleapis.com/envoy.extensions.filters.http.header_to_metadata.v3.Config
    #     #     request_rules:
    #     #       - xxx: xxx
    #     #         on_header_present:
    #     #           metadata_namespace:
    #     #           key:
    #     #           type: STRING
    #     #         on_header_missing:
    #     #           metadata_namespace:
    #     #           key:
    #     #           value:
    #     #           type: STRING
    #     #
    #     # - name: envoy.filters.http.ext_authz
    #     #   typed_config:
    #     #     "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthz
    #     #     grpc_service:
    #     #       envoy_grpc:
    #     #         cluster_name: xxx
    #     #       timeout: xxx
    #     #     failure_mode_allow: false
    #     #     transport_api_version: V3
    #     #     status_on_error:
    #     #       code: GatewayTimeout
    #     # - name: envoy.filters.http.ip_tagging
    #     #   typed_config:
    #     #     "@type": type.googleapis.com/envoy.extensions.filters.http.ip_tagging.v3.IPTagging
    #     #     request_type: EXTERNAL
    #     #     ip_tags:
    #     #       - ip_tag_name: foo
    #     #         ip_list:
    #     #           - address_prefix:
    #     #             prefix_len:
    #     # - name: envoy.filters.http.ratelimit
    #     #   typed_config:
    #     #     "@type": type.googleapis.com/envoy.extensions.filters.http.ratelimit.v3.RateLimit
    #     #     domain: xxx
    #     #     stage: 0
    #     #     timeout: 0.XXs
    #     #     request_type: both
    #     #     failure_mode_deny: false
    #     #     rate_limit_service:
    #     #       transport_api_version: V3
    #     #       grpc_service:
    #     #         envoy_grpc:
    #     #           cluster_name: xxx
    #     - name: envoy.filters.http.router
    #       typed_config:
    #         "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
    #         dynamic_stats: true
    #         start_child_span: true
    #         suppress_envoy_headers: false
    #     # tracing:
    #     #   client_sampling:
    #     #     value: 0
    #     #   random_sampling:
    #     #     value: 100.0
    #     #   overall_sampling:
    #     #     value: 10.0
    #     #   provider:
    #     #     name : envoy.tracers.opencensus
    #     #     typed_config:
    #     #       "@type": type.googleapis.com/envoy.config.trace.v3.OpenCensusConfig
    #     #       ocagent_exporter_enabled: true
    #     #       ocagent_address: {{env.Getenv "NODE_IP" "127.0.0.1"}}:5678
    #     #       incoming_trace_context: ["TRACE_CONTEXT"]
    #     #       outgoing_trace_context: ["TRACE_CONTEXT"]
    #     #       trace_config:
    #     #         constant_sampler:
    #     #           decision: ALWAYS_OFF #See issue: https://github.com/census-instrumentation/opencensus-cpp/issues/294
    #     #         max_number_of_annotations: 50
    #     #         max_number_of_attributes: 50
    #     #         max_number_of_message_events: 100
    #     #         max_number_of_links: 200
    #     common_http_protocol_options:
    #       #max_connection_duration: 0
    #       idle_timeout: 300s
    #       max_headers_count: 150
    #       headers_with_underscores_action: DROP_HEADER
    #     http_protocol_options:
    #       accept_http_10: false
    #       # header_key_format:
    #       #   proper_case_words: {}
    #       allow_chunked_length: false
    #     http2_protocol_options:
    #       hpack_table_size: 4096
    #       max_concurrent_streams: 128
    #       initial_stream_window_size: 65536 # 64 KiB
    #       initial_connection_window_size: 262144 # 256 KiB
    #       max_outbound_frames: 10000
    #       max_outbound_control_frames: 1000
    #       max_consecutive_inbound_frames_with_empty_payload: 1
    #       max_inbound_priority_frames_per_stream: 100
    #       max_inbound_window_update_frames_per_data_frame_sent: 10
    #       stream_error_on_invalid_http_messaging: false
    #       connection_keepalive:
    #         interval: 60s
    #         timeout: 30s
    #     access_log:
    #     - name: envoy.access_loggers.file
    #       typed_config:
    #         "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
    #         path: "/dev/stdout"
    #         log_format:
    #           formatters:
    #           - name: envoy.formatter.req_without_query
    #             typed_config:
    #               "@type": type.googleapis.com/envoy.extensions.formatter.req_without_query.v3.ReqWithoutQuery
    #           json_format:
    #             downstream_local_port: "%DOWNSTREAM_LOCAL_PORT%"
    #             start_time: "%START_TIME%"
    #             method: "%REQ(:METHOD)%"
    #             referer: "%REQ(REFERER)%"
    #             # Log path without query - Envoy 1.19
    #             path: "%REQ_WITHOUT_QUERY(:PATH)%"
    #             protocol: "%PROTOCOL%"
    #             response_code: "%RESPONSE_CODE%"
    #             response_code_details: "%RESPONSE_CODE_DETAILS%"
    #             connection_termination_details: "%CONNECTION_TERMINATION_DETAILS%"
    #             response_flags: "%RESPONSE_FLAGS%"
    #             bytes_received: "%BYTES_RECEIVED%"
    #             bytes_sent: "%BYTES_SENT%"
    #             upstream_wire_bytes_sent: "%UPSTREAM_WIRE_BYTES_SENT%"
    #             upstream_wire_bytes_received: "%UPSTREAM_WIRE_BYTES_RECEIVED%"
    #             upstream_header_bytes_sent: "%UPSTREAM_HEADER_BYTES_SENT%"
    #             upstream_header_bytes_received: "%UPSTREAM_HEADER_BYTES_RECEIVED%"
    #             downstream_wire_bytes_sent: "%DOWNSTREAM_WIRE_BYTES_SENT%"
    #             downstream_wire_bytes_received: "%DOWNSTREAM_WIRE_BYTES_RECEIVED%"
    #             downstream_header_bytes_sent: "%DOWNSTREAM_HEADER_BYTES_SENT%"
    #             downstream_header_bytes_received: "%DOWNSTREAM_HEADER_BYTES_RECEIVED%"
    #             upstream_transport_failure_reason: "%UPSTREAM_TRANSPORT_FAILURE_REASON%"
    #             downstream_direct_remote_address: "%DOWNSTREAM_DIRECT_REMOTE_ADDRESS%"
    #             downstream_local_address: "%DOWNSTREAM_LOCAL_ADDRESS%"
    #             downstream_remote_address: "%DOWNSTREAM_REMOTE_ADDRESS%"
    #             upstream_local_address: "%UPSTREAM_LOCAL_ADDRESS%"
    #             upstream_remote_address: "%UPSTREAM_REMOTE_ADDRESS%"
    #             duration: "%DURATION%"
    #             request_duration: "%REQUEST_DURATION%"
    #             response_duration: "%RESPONSE_DURATION%"
    #             response_tx_duration: "%RESPONSE_TX_DURATION%"
    #             request_tx_duration: "%REQUEST_TX_DURATION%"
    #             upstream_duration: "%RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)%"
    #             request_header_size: "%REQUEST_HEADERS_BYTES%"
    #             response_header_size: "%RESPONSE_HEADERS_BYTES%"
    #             x_forwarded_for: "%REQ(X-FORWARDED-FOR)%"
    #             x_forwarded_proto: "%REQ(X-FORWARDED-PROTO)%"
    #             user_agent: "%REQ(USER-AGENT)%"
    #             x_request_id: "%REQ(X-REQUEST-ID)%"
    #             x_trace_id: "%REQ(TRACEPARENT)%"
    #             upstream_cluster: "%UPSTREAM_CLUSTER%"
    #             authority: "%REQ(:AUTHORITY)%"
    #             retry_count: "%UPSTREAM_REQUEST_ATTEMPT_COUNT%"
    #             x_amzn_trace_id: "%REQ(X-AMZN-TRACE-ID)%"
    #             upstream_protocol: "%UPSTREAM_PROTOCOL%"
    #     server_name: envoy
    #     server_header_transformation: OVERWRITE
    #     max_request_headers_kb: 96
    #     request_timeout: 300s # 5 mins, must be disabled for long-lived and streaming requests
    #     stream_idle_timeout: 300s # 5 mins, must be disabled for long-lived and streaming requests
    #     drain_timeout: 10s
    #     delayed_close_timeout: 5s
    #     use_remote_address: false
    #     xff_num_trusted_hops: 0
    #     generate_request_id: true
    #     preserve_external_request_id: false
    #     always_set_request_id_in_response: true
    #     forward_client_cert_details: SANITIZE
    #     normalize_path: true
    #     merge_slashes: true

    # transport_socket:
    #   name: envoy.transport_sockets.tls
    #   typed_config:
    #     "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
    #     common_tls_context:
    #       tls_certificates:
    #       - certificate_chain:
    #           filename: xxx
    #         private_key:
    #           filename: xxx
    #       validation_context: {}
    #       alpn_protocols:
    #       - h2
    #       - http/1.1
